version: 2.1
orbs:
  python: circleci/python@2
jobs:
  test-python:
    docker:
      - image: cimg/python:3.8-node
    working_directory: ~/project/web_app_project/project_board
    steps:
      - checkout:
          path: ~/project
      - python/install-packages
      - run:
          name: Run tests
          command: pytest --junitxml=junit.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit.xml
  build-docker-image:
    docker:
      - image: cimg/python:3.8-node
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image (with output)
          command: |
            docker build --progress=plain -t $GITLAB_REGISTRY/$GITLAB_GROUP/$GITLAB_PROJECT .
      - run:
          name: Save Docker image as tar
          command: |
            docker save $GITLAB_REGISTRY/$GITLAB_GROUP/$GITLAB_PROJECT -o $GITLAB_REGISTRY/$GITLAB_GROUP/$GITLAB_PROJECT.tar
      - persist_to_workspace:
          root: .
          paths:
            - $GITLAB_REGISTRY/$GITLAB_GROUP/$GITLAB_PROJECT.tar
  test-docker-image:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Load Docker image from tar
          command: |
            docker load -i $GITLAB_REGISTRY/$GITLAB_GROUP/$GITLAB_PROJECT.tar
      - run:
          name: Run Docker image
          command: |
            docker run -d --name weather-app -p 8000:8000 $GITLAB_REGISTRY/$GITLAB_GROUP/$GITLAB_PROJECT
            sleep 10
            docker ps -a
      - run:
          name: Curl container
          command: |
            CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' weather-app)
            curl http://$CONTAINER_IP:8000 || (docker logs weather-app && exit 1)
      - run:
          name: Notify Discord on success
          when: on_success
          command: |
              curl -H "Content-Type: application/json" \
                   -X POST \
                   -d '{"content": "✅ *Weather app passed health check in CircleCI!*"}' \
                   $DISCORD_WEBHOOK_URL
      - run:
          name: Notify Discord on failure
          when: on_fail
          command: |
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d '{"content": "❌ *Weather app failed health check in CircleCI!*"}' \
                 $DISCORD_WEBHOOK_URL
      - run:
          name: Cleanup Docker container
          command: |
            docker stop weather-app || true
            docker rm weather-app || true

  push-image-gitlab:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Login to gitlab
          command: |
            docker login $GITLAB_REGISTRY -u $GITLAB_USER -p $GITLAB_TOKEN
      - run:
          name: Push image to gitlab container registry
          command: |
            docker push $GITLAB_REGISTRY/$GITLAB_GROUP/$GITLAB_PROJECT


workflows:
  build-and-test:
    jobs:
      - test-python
      - build-docker-image:
          requires:
            - test-python
      - test-docker-image:
          requires:
            - build-docker-image
      - push-image-gitlab:
          requires:
            - test-docker-image
